plugins {
	id 'org.springframework.boot' version '2.3.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
	id 'info.solidsoft.pitest' version '1.5.1'
}

group = 'com.postings.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "Hoxton.SR6")
	set('resilience4jVersion', '1.3.1')
	set('powermock.version', '2.0.2')
}

task copyClasses(type: Copy) {
	from 'build/classes/java'
	into 'bin'
}

classes {
	finalizedBy copyClasses
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.cloud:spring-cloud-config-server'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin'	
	implementation("io.github.resilience4j:resilience4j-spring-boot2:${resilience4jVersion}")
	implementation("io.github.resilience4j:resilience4j-reactor:${resilience4jVersion}")
	implementation 'org.springdoc:springdoc-openapi-ui:1.2.32'
	implementation 'io.springfox:springfox-swagger2:3.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation('org.springframework.boot:spring-boot-starter-oauth2-client') {
		exclude group: 'net.minidev', module: 'json-smart'
	}
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.security:spring-security-oauth2-jose'	
    runtimeOnly 'io.springfox:springfox-swagger-ui:3.0.0'
	compileOnly 'org.mapstruct:mapstruct-jdk8:1.3.1.Final'
	compileOnly 'org.mapstruct:mapstruct-processor:1.3.1.Final'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.cloud:spring-cloud-starter-contract-stub-runner'
	testImplementation 'org.powermock:powermock-module-junit4:2.0.2'
	testImplementation 'org.powermock:powermock-api-mockito2:2.0.2'
	testImplementation 'org.powermock:powermock-api-mockito-common:1.6.5'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'io.jsonwebtoken:jjwt:0.9.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
	
}

bootJar {
    layered()
}


test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

jacoco {
    reportsDir = file("$buildDir/reports/jacoco")
}

pitest {
    //adds dependency to org.pitest:pitest-junit5-plugin and sets "testPlugin" to "junit5"
    junit5PluginVersion = '0.12'
    // ...
}

// build.dependsOn 'pitest'

