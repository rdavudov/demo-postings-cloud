server.port: 8090

spring.application.name: gateway

spring.cloud.gateway.discovery.locator.enabled: true

#server.ssl:
#  key-store-type: PKCS12
#  key-store: classpath:keystore/postings.jks
#  key-store-password: postings
#  key-alias: postings

service:
  eureka-username: u
  eureka-password: p
  eureka-server: localhost

eureka:
  client:
    serviceUrl:
      defaultZone: "http://${service.eureka-username}:${service.eureka-password}@${service.eureka-server}:8761/eureka/"
    initialInstanceInfoReplicationIntervalSeconds: 5
    registryFetchIntervalSeconds: 5
  instance:
    leaseRenewalIntervalInSeconds: 5
    leaseExpirationDurationInSeconds: 5
    
spring.cloud.gateway.routes:
- id: eureka-api
  uri: http://${service.eureka-server}:8761
  predicates:
  - Path=/eureka/api
  filters:
  - SetPath=/
  
- id: posts-api-without-segment
  uri: lb://post
  predicates:
  - Path=/api/posts
  filters:
  - SetPath=/api/v1/posts

- id: posts-api-with-segment
  uri: lb://post
  predicates:
  - Path=/api/posts/{segment}
  filters:
  - SetPath=/api/v1/posts/{segment}  
  
- id: users-api-without-segment
  uri: lb://user
  predicates:
  - Path=/api/users
  filters:
  - SetPath=/api/v1/users

- id: users-api-with-segment
  uri: lb://user
  predicates:
  - Path=/api/users/{segment}
  filters:
  - SetPath=/api/v1/users/{segment}    
  
- id: roles-api-without-segment
  uri: lb://user
  predicates:
  - Path=/api/roles
  filters:
  - SetPath=/api/v1/roles

- id: roles-api-with-segment
  uri: lb://user
  predicates:
  - Path=/api/roles/{segment}
  filters:
  - SetPath=/api/v1/roles/{segment}      
  
- id: google-sign-in
  uri: http://localhost:8080
  predicates:
  - Path=/login
  filters:
  - SetPath=/login
  
- id: google-authorize
  uri: http://localhost:8080
  predicates:
  - Path=/oauth2/authorization/**
  
- id: google-redirect
  uri: http://localhost:8080
  predicates:
  - Path=/login/oauth2/code/**